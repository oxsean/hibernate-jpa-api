buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        mavenRepo name: 'jboss-nexus', url: "https://repository.jboss.org/nexus/content/groups/public/"
    }
    dependencies {
        classpath 'org.hibernate.build.gradle:gradle-maven-publish-auth:2.0.1'
    }
}

apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'maven-publish-auth'
apply plugin: 'osgi'

apply plugin: 'eclipse'
apply plugin: 'idea'

repositories {
    mavenCentral()
}

group = 'org.hibernate.javax.persistence'
version = '1.0.0.Final-patched'

targetCompatibility=1.6
sourceCompatibility=1.6

// gradle uses 'build/' by default, we like 'target/'
buildDir = "target"

// osgi info
jar {
    manifest = osgiManifest {
        // GRADLE-1411: Even if we override Imports and Exports
        // auto-generation with instructions, classesDir and classpath
        // need to be here (temporarily).
        classesDir = sourceSets.main.output.classesDir
        classpath = configurations.runtime

        // Let OsgiManifest automatically generate all imports.

        // Explicitly list exports to control the version.
        instruction "Export-Package",
            "javax.persistence;version='${gradle.jpaVersion}.0'",
            "javax.persistence.criteria;version='${gradle.jpaVersion}.0'",
            "javax.persistence.metamodel;version='${gradle.jpaVersion}.0'",
            "javax.persistence.spi;version='${gradle.jpaVersion}.0'",
            "*"

        instruction 'Bundle-Vendor', 'Hibernate.org'

        instruction 'Built-By', 'Hibernate.org'
        instruction 'Specification-Title', "Java Persistence API, Version ${gradle.jpaVersion}"
        instruction 'Specification-Version', "${gradle.jpaVersion}"
        instruction 'Specification-Vendor', 'Oracle, Inc.'
        instruction 'Implementation-Version', version
        instruction 'Implementation-Vendor', 'hibernate.org'
        instruction 'Implementation-Title', 'Java Persistence API'
    }
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourcesJar {
                classifier "sources"
            }

/*            artifact javadocJar {
                classifier "javadoc"
            }*/

            pom.withXml {
                // append additional metadata
                asNode().children().last() + {
                    resolveStrategy = Closure.DELEGATE_FIRST

                    name "Java Persistence API, Version ${gradle.jpaVersion}"
                    description 'Clean-room definition of JPA APIs intended for use in developing Hibernate JPA implementation.  See README.md for details'
                    url 'http://hibernate.org'
                    issueManagement {
                        system 'jira'
                        url 'http://opensource.atlassian.com/projects/hibernate/browse/JPA'
                    }
                    scm {
                        url "http://github.com/hibernate/hibernate-jpa-api"
                        connection "scm:git:http://github.com/hibernate/hibernate-jpa-api.git"
                        developerConnection "scm:git:git@github.com:hibernate/hibernate-jpa-api.git"
                    }
                    licenses {
                        license {
                            name 'Eclipse Public License (EPL), Version 1.0'
                            url 'http://www.eclipse.org/legal/epl-v10.html'
                            distribution 'repo'
                        }
                        license {
                            name 'Eclipse Distribution License (EDL), Version 1.0'
                            url 'http://www.eclipse.org/org/documents/edl-v10.php'
                        }
                    }
                    developers {
                        developer {
                            id 'epbernard'
                            name 'Emmanuel Bernard'
                            email 'emmanuel@hibernate.org'
                            organization 'Red Hat, Inc.'
                            url 'http://in.relation.to/Bloggers/Emmanuel'
                        }
                        developer {
                            id 'hardy.ferentschik'
                            name 'Hardy Ferentschik'
                            email 'hferents@redhat.com'
                            organization 'Red Hat, Inc.'
                            url 'http://in.relation.to/Bloggers/Hardy'
                        }
                        developer {
                            id 'sebersole'
                            name 'Steve Ebersole'
                            email 'steve@hibernate.org'
                            organization 'Red Hat, Inc.'
                            url 'http://in.relation.to/Bloggers/Steve'
                        }
                    }
                }
            }
        }
    }

    repositories {
        maven {
            if ( project.version.endsWith( 'SNAPSHOT' ) ) {
                name 'nexus-snapshots'
                url 'http://dev.gtis.com.cn/nexus/content/repositories/snapshots/'
            }
            else {
                name 'nexus-releases'
                url 'http://dev.gtis.com.cn/nexus/content/repositories/releases/'
            }
            credentials {
                username "admin"
                password "admin123"
            }
        }
    }
}

// create the javadoc jar
task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier = 'javadoc'
}

// create the sources jar
task sourcesJar(type: Jar, dependsOn: compileJava) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.6'
}
